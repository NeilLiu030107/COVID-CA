setView(-119,37,4) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(cases),
weight = 2,
color="white",
dashArray = "3",
opacity=1,
fillOpacity = 0.7,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 16px"),
textsize = "15px",
direction = "auto")
) %>%
addLegend(pal = pal, values = ~cases, opacity = 0.7, title = sprintf("New Case(s) on s%", data[1][1]))
}
Choropleths(data_March042020)
##Mapping function
Choropleths <-function(data){
#Join attributes
Map <- sp::merge(CA_counties_boundary, data, by.x="NAMELSAD", by.y="region", all.x=TRUE)
#color
bins <-c(0,20,100,300,600,2500,5000,10000,20000,Inf)
pal <- colorBin("YlOrRd", domain = Map$cases, bins = bins)
#label
labels <- sprintf(
"<strong>%s</strong><br/>%g new case(s)",
Map$NAME, Map$cases
) %>% lapply(htmltools::HTML)
#mapping
leaflet(Map) %>%
setView(-119,37,4) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(cases),
weight = 2,
color="white",
dashArray = "3",
opacity=1,
fillOpacity = 0.7,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 16px"),
textsize = "15px",
direction = "auto")
) %>%
addLegend(pal = pal, values = ~cases, opacity = 0.7, title = sprintf("New Case(s) on %s", data[1][1]))
}
Choropleths(data_March042020)
##Mapping function
Choropleths <-function(data){
#Join attributes
Map <- sp::merge(CA_counties_boundary, data, by.x="NAMELSAD", by.y="region", all.x=TRUE)
#color
bins <-c(0,20,100,300,600,2500,5000,10000,20000,Inf)
pal <- colorBin("YlOrRd", domain = Map$cases, bins = bins)
#label
labels <- sprintf(
"<strong>%s</strong><br/>%g new case(s)",
Map$NAME, Map$cases
) %>% lapply(htmltools::HTML)
#mapping
leaflet(Map) %>%
setView(-119,37,4) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(cases),
weight = 2,
color="white",
dashArray = "3",
opacity=1,
fillOpacity = 0.7,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 16px"),
textsize = "15px",
direction = "auto")
) %>%
addLegend(pal = pal, values = ~cases, opacity = 0.7, title = sprintf("New Case(s) on %s", data[1,1]))
}
Choropleths(data_March042020)
Choropleths(data_August102021)
##Mapping function
Choropleths <-function(data){
#Join attributes
Map <- sp::merge(CA_counties_boundary, data, by.x="NAMELSAD", by.y="region", all.x=TRUE)
#color
bins <-c(0,20,40,100,400,1000,2500,5000,10000,Inf)
pal <- colorBin("YlOrRd", domain = Map$cases, bins = bins)
#label
labels <- sprintf(
"<strong>%s</strong><br/>%g new case(s)",
Map$NAME, Map$cases
) %>% lapply(htmltools::HTML)
#mapping
leaflet(Map) %>%
setView(-119,37,4) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(cases),
weight = 2,
color="white",
dashArray = "3",
opacity=1,
fillOpacity = 0.7,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 16px"),
textsize = "15px",
direction = "auto")
) %>%
addLegend(pal = pal, values = ~cases, opacity = 0.7, title = sprintf("New Case(s) on %s", data[1,1]))
}
Choropleths(data_March042020)
Choropleths(data_August102021)
Choropleths(data_Dec152020)
Choropleths(data_June152021)
Choropleths(data_Nov192020)
Choropleths(data_May252020)
Choropleths(data_July132020)
Choropleths(data_April152021)
Choropleths(data_August102021)
Choropleths(data_Dec152020)
Choropleths(data_August102021)
Choropleths(data_July132020)
Choropleths(data_April152021)
Choropleths(data_May252020)
Choropleths(data_March292020)
Choropleths(data_Dec152020)
View(data_April152021)
View(data_August102021)
View(hospital)
View(poverty)
View(cov_data)
View(ca_mobility_trend)
View(cov_data)
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1<- cov_data %>%
groupby(region) %>%
summarise(mobility_trend=mean(mobility_trend),icu_occupancy=mean(icu_occupancy))
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1<- cov_data %>%
groupby(region) %>%
summarise(mobility_trend=mean(mobility_trend),icu_occupancy=mean(icu_occupancy))
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1<- cov_data %>%
group_by(region) %>%
summarise(mobility_trend=mean(mobility_trend),icu_occupancy=mean(icu_occupancy))
View(data_1)
View(cov_data)
View(data)
# Statewide COVID-19 Data from https://data.ca.gov/dataset/covid-19-time-series-metrics-by-county-and-state1/resource/6a1aaf21-2a2c-466b-8738-222aaceaa168
data <- read.csv("covid-data/covid19cases_test.csv")
View(data)
# Statewide COVID-19 Data from https://data.ca.gov/dataset/covid-19-time-series-metrics-by-county-and-state1/resource/6a1aaf21-2a2c-466b-8738-222aaceaa168
data <- read.csv("covid-data/covid19cases_test.csv")
# Adding prevalence and fatility to data
data <- data %>%
mutate(cases_per_1000= cumulative_cases/population*1000, fatality= cumulative_deaths/cumulative_cases)
data$fatality[which(is.nan(data$fatality))]<-0
View(data)
#join dataframes
ca_mobility_trend$X <-NULL
cov_data <- data %>%
left_join(ca_mobility_trend) %>%
left_join(hospital) %>%
left_join(vax) %>%
mutate(vax_ratio=cumulative_fully_vaccinated/population)
View(cov_data)
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1<- cov_data %>%
group_by(region) %>%
summarise(mobility_trend=mean(mobility_trend),icu_occupancy=mean(icu_occupancy))
View(data_1)
View(data_1)
View(cov_data)
View(data_1)
ï¼Ÿmean()
?mean()
??mean()
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1<- cov_data %>%
group_by(region) %>%
summarise(mobility_trend=mean(mobility_trend),icu_occupancy=mean(icu_occupancy))
View(data_1)
??mean()
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1 <- cov_data %>%
group_by(region) %>%
summarise(mobility_trend=mean(mobility_trend, na.rm = TRUE),icu_occupancy=mean(icu_occupancy, na.rm=TRUE))
View(data_1)
View(hospital)
View(cov_data)
Choropleths(data_August102021)
#health capacity 3/29
#https://raw.githubusercontent.com/datadesk/california-coronavirus-data/master/cdph-hospital-patient-county-totals.csv
hospital <- read.csv("covid-data/hospital.csv")
hospital <- hospital %>%
mutate(icu_occupancy= (icu_positive_patients+icu_suspected_patients)/(icu_available_beds+icu_positive_patients+icu_suspected_patients)) %>%
select(region, date, icu_occupancy)
View(hospital)
#health capacity 3/29
#https://raw.githubusercontent.com/datadesk/california-coronavirus-data/master/cdph-hospital-patient-county-totals.csv
hospital <- read.csv("covid-data/hospital.csv")
View(hospital)
#health capacity 3/29
#https://raw.githubusercontent.com/datadesk/california-coronavirus-data/master/cdph-hospital-patient-county-totals.csv
hospital <- read.csv("covid-data/hospital.csv")
hospital <- hospital %>%
mutate(icu_occupancy= (icu_positive_patients+icu_suspected_patients)/(icu_available_beds+icu_positive_patients+icu_suspected_patients)) %>%
select(region, date, icu_occupancy)
View(hospital)
cov_data <- data %>%
left_join(ca_mobility_trend) %>%
left_join(hospital) %>%
left_join(vax) %>%
mutate(vax_ratio=cumulative_fully_vaccinated/population)
##Part.3 Spatial Analysis
#summarise cov_data with average mobility trend and icu occupancy
data_1 <- cov_data %>%
group_by(region) %>%
summarise(mobility_trend=mean(mobility_trend, na.rm = TRUE),icu_occupancy=mean(icu_occupancy, na.rm=TRUE))
View(data_1)
#August 10
data_August102021 <- cov_data %>%
filter(date=="8/10/2021") %>%
select(date,region, cases, cases_per_1000, fatality, mobility_trend, icu_occupancy, vax_ratio)
View(data_August102021)
#August 10 data
data_2 <-data_August102021 %>%
select(region, cases_per_1000, fatality, vax_ratio)
View(cov_ca)
View(cov_ca)
View(cov_ca@data)
#August 10 data
data_2 <-data_August102021 %>%
select(region, cases_per_1000, fatality, vax_ratio)
View(data_2)
View(data_August102021)
#August 10
data_August102021 <- cov_data %>%
filter(date=="8/10/2021") %>%
select(date,region, cases, cases_per_1000, fatality, mobility_trend, icu_occupancy, vax_ratio)
#June 27 2021 delta variant
data_June272021 <- cov_data %>%
filter(date=="6/27/2021") %>%
select(date,region, cases, cases_per_1000, fatality, mobility_trend, icu_occupancy, vax_ratio)
#August 9
data_August092021 <- cov_data %>%
filter(date=="8/9/2021") %>%
select(date,region, cases, cases_per_1000, fatality, mobility_trend, icu_occupancy, vax_ratio)
#August 10 data
data_2 <-data_August092021 %>%
select(region, cases_per_1000, fatality, vax_ratio)
#making a general dataset for analysis
data_general <- merge(data_1,data_2, by="region")
View(cov_ca)
View(cov_ca@data)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
select(COUNTY, ppt, mxTemp, minTemp, elevation, travel_time, night_light)
View(data_3)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
group_by(COUNTY) %>%
summarise(ppt=ppt, mxTemp=mxTemp, minTemp=minTemp)
View(data_3)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
group_by(COUNTY) %>%
summarise(ppt=mean(ppt), mxTemp=mean(mxTemp), minTemp=mean(minTemp))
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
group_by(COUNTY) %>%
summarise(ppt=mean(ppt), mxTemp=mean(mxTemp), minTemp=mean(minTemp), elevation=mean(elevation), travel_time=mean(travel_time), night_light=mean(night_light) )
data_general <- merge(data_general, data_3, by.x="region", by.y="COUNTY")
View(data_general)
#glm model
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio +ppt+mxTemp+minTemp+elevation+night_light, data=data_general, family="poisson")
glm_mod_1
#glm model
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio+night_light, data=data_general, family="poisson")
glm_mod_1
#glm model
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio, data=data_general, family="poisson")
View(glm_mod_1)
glm_mod_1
#glm model
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio, data=data_general, family="identity")
?glm
#glm model
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio, data=data_general, family="gaussian")
glm_mod_1
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
#stepwise regression
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend + vax_ratio, data=data_general, family="gaussian")
summary(glm_mod_1)
#social distancing--from Apple--direction search frequency 1/13
ca_mobility_trend <- read.csv("covid-data/ca_mobility_trend.csv")
View(ca_mobility_trend)
ca_mobility_trend <- ca_mobility_trend %>%
group_by(region, date) %>%
summarise(mobility_trend=mean(mobility_trend))
View(ca_mobility_trend)
View(data_1)
glm_mod_1 <- glm(cases_per_1000 ~ mobility_trend, data=data_general, family="gaussian")
summary(glm_mod_1)
glm_mod_1 <- glm(cases_per_1000 ~ vax_ratio, data=data_general, family="gaussian")
summary(glm_mod_1)
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
#fatality
glm_mod_2 <- glm(fatality ~ icu_occupancy+ vax_ratio+popDensity+ppt+mxTemp+minTemp+elevation+travel_time+night_light, data=data_general, family="binomial")
View(data_general)
View(data_3)
View(cov_ca)
View(cov_ca@data)
#assign covariants to counties
cov_ca <- sp::merge(cov_ca, pop_density, by.x="NAMELSAD", by.y="region", all.x=TRUE)
cov_ca <-readOGR(dsn="./CA_Counties", layer="CA_Counties_TIGER2016")
cov_ca <- spTransform(cov_ca, crs(maxTemp))
#assign covariants to counties
cov_ca <- sp::merge(cov_ca, pop_density, by.x="NAMELSAD", by.y="region", all.x=TRUE)
cov_ca <- sp::merge(cov_ca, poverty, by.x="NAMELSAD", by.y="region", all.x=TRUE)
cov_ca$ppt <- raster::extract(ca_rainfall_mask, cov_ca, fun=mean, na.rm=TRUE)
cov_ca$mxTemp <- raster::extract(ca_maxTemp_mask, cov_ca, fun=mean, na.rm=TRUE)
cov_ca$minTemp <-raster::extract(ca_minTemp_mask, cov_ca, fun=mean, na.rm=TRUE)
cov_ca$elevation <-raster::extract(ca_elev_mask, cov_ca, fun=mean, na.rm=TRUE)
cov_ca$travel_time <-raster::extract(ca_travel_time_mask, cov_ca, fun=mean, na.rm=TRUE)
cov_ca$night_light <-raster::extract(ca_night_light_mask, cov_ca, fun=mean, na.rm=TRUE)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
select(NAMELSAD, popDensity, poverty_rate, ppt, mxTemp, minTemp, elevation, travel_time, night_light)
View(cov_ca@data)
View(pop_density)
pop_density <- pop_density %>%
rename(region=Ã¯..region) %>%
select(region, popDensity)
#assign covariants to counties
cov_ca <- sp::merge(cov_ca, pop_density, by.x="NAMELSAD", by.y="region", all.x=TRUE)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
select(NAMELSAD, popDensity, poverty_rate, ppt, mxTemp, minTemp, elevation, travel_time, night_light)
#data from spatial polygon data frame
data_3 <- cov_ca@data %>%
select(NAMELSAD, popDensity, ppt, mxTemp, minTemp, elevation, travel_time, night_light)
#making a general dataset for analysis
data_general <- merge(data_1,data_2, by="region")
data_general <- merge(data_general, data_3, by.x="region", by.y="NAMELSAD")
#fatality
glm_mod_2 <- glm(fatality ~ icu_occupancy+ vax_ratio+popDensity+ppt+mxTemp+minTemp+elevation+travel_time+night_light, data=data_general, family="binomial")
summary(glm_mod_2)
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
library(sf)
library(spdep)
?moran.test()
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
library(sf)
library(spdep)
#autocorrelation
ca_nb <- poly2nb(CA_counties_boundary)
ca_w<- nb2listw(ca_nb)
moran.test(data_general$cases_per_1000, listw= ca_w)
#spatial autocorrelation is rejected as p-value > 0.05
moran.test(data_general$fatality, listw= ca_w)
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
library(sf)
library(spdep)
summary(glm_mod_1_elev)
glm_mod_1_elev <- glm(cases_per_1000 ~ elevation,  data=data_general, family="poisson")
glm_mod_1_minTemp <-glm(cases_per_1000 ~ minTemp,  data=data_general, family="poisson")
glm_mod_1_popDensity <- glm(cases_per_1000 ~ popDensity,  data=data_general, family="poisson")
glm_mod_1_mxTemp <- glm(cases_per_1000 ~ mxTemp,  data=data_general, family="poisson")
glm_mod_1_precipitation<- glm(cases_per_1000 ~ ppt,  data=data_general, family="poisson")
glm_mod_1_vax <- glm(cases_per_1000 ~ vax_ratio,  data=data_general, family="poisson")
summary(glm_mod_1_vax)
glm_mod_1_precipitation<- glm(cases_per_1000 ~ ppt,  data=data_general, family="poisson")
ggplot()+geom_point(aes(glm_mod_1_popDensity$fitted.values, data_general$cases_per_1000))
glm_mod_1_sig <- glm(cases_per_1000 ~ vax_ratio+ppt+mxTemp+minTemp+elevation+popDensity, data=data_general, family="poisson")
ggplot()+geom_point(aes(glm_mod_1_sig$fitted.values, data_general$cases_per_1000))
summary(glm_mod_1_sig)
glm_mod_1_minTemp <-glm(cases_per_1000 ~ minTemp,  data=data_general, family="poisson")
summary(glm_mod_1_minTemp)
glm_mod_1_sig <- glm(cases_per_1000 ~ vax_ratio+ppt+mxTemp+elevation+popDensity, data=data_general, family="poisson")
summary(glm_mod_1_sig)
ggplot()+geom_point(aes(glm_mod_1_sig$fitted.values, data_general$cases_per_1000))
summary(glm_mod_1)
summary(glm_mod_1)
glm_mod_1 <- glm(cases_per_1000 ~ vax_ratio+mobility_trend+night_light+ppt+mxTemp+minTemp+elevation+popDensity, data=data_general, family="poisson")
summary(glm_mod_1)
glm_mod_1_sig <- glm(cases_per_1000 ~ vax_ratio+ppt+mxTemp+elevation+popDensity, data=data_general, family="poisson")
summary(glm_mod_1_sig)
glm_mod_1_sig <- glm(cases_per_1000 ~ vax_ratio+ppt+mxTemp+minTemp+elevation+popDensity, data=data_general, family="poisson")
summary(glm_mod_1_sig)
#remove minTemp
glm_mod_1_sig_2 <- glm(cases_per_1000 ~ vax_ratio+ppt+mxTemp+elevation+popDensity, data=data_general, family="poisson")
ggplot()+geom_point(aes(glm_mod_1_sig$fitted.values, data_general$cases_per_1000))
summary(glm_mod_1_sig)
summary(glm_mod_1_sig_2)
glm_mod_1_elev <- glm(cases_per_1000 ~ elevation,  data=data_general, family="poisson")
summary(glm_mod_1_elev)
ggplot()+geom_point(aes(glm_mod_1_elevation$fitted.values, data_general$cases_per_1000))
ggplot()+geom_point(aes(glm_mod_1_elev$fitted.values, data_general$cases_per_1000))
summary(glm_mod_1_sig_2)
options(scipen=999)
summary(glm_mod_1_sig_2)
#loading libraries
library(tidyverse)
library(dplyr)
library(leaflet)
library(sp)
library(rgdal)
library(raster)
library(lubridate)
library(sf)
library(spdep)
summary(glm_mod_1_minTemp)
?choroLayer()
install.packages("cartography")
library(cartography)
choroLayer(spdf=CA_counties_boundary, df=data_general,
var="cases_per_1000", legend.pos = 'bottomleft',
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
choroLayer(spdf=CA_counties_boundary, df=data_general,
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
title("Observed Cases Count")
choroLayer(spdf=CA_counties_boundary, df=data_general,
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
View(data_general)
View(CA_counties_boundary)
View(CA_counties_boundary@data)
choroLayer(spdf=CA_counties_boundary, df=data_general,
spdfid="NAMELSAD", dfid="region"
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
choroLayer(spdf=CA_counties_boundary, df=data_general,
spdfid="NAMELSAD", dfid="region",
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
title("Observed Cases Count")
choroLayer(spdf=CA_counties_boundary, df=data_general,
spdfid="NAMELSAD", dfid="region",
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = F, legend.title.txt = "Cumulative cases per 1000 people")
title("Observed Cases Count")
choroLayer(spdf=CA_counties_boundary, df=data_general,
spdfid="NAMELSAD", dfid="region",
var="cases_per_1000", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
title("Observed Cases Count")
model_data <- fitted(glm_mod_1_sig_2)
summary(model_data)
model_data
data_general$fitted_glm <- fitted(glm_mod_1_sig_2)
View(data_general)
choroLayer(spdf=CA_counties_boundary, df=data_general,
spdfid="NAMELSAD", dfid="region",
var="fitted_glm", legend.pos = "bottomleft",
legend.horiz = T, legend.title.txt = "Cumulative cases per 1000 people")
title("GLM model")
